class node:
    def __init__(self, info=None):
        self.data=info
        self.left=None
        self.right=None
        
def construct_BST(root,element):
    if root.data >= element:
        if root.left == None:
            root.left = node(element)
            return
        construct_BST(root.left,element)
    else:
        if root.right == None:
            root.right = node(element)
            return
        construct_BST(root.right,element)
    
def inorder(root):
    if root == None:
        return
    inorder(root.left)
    print(root.data , end = " ")
    inorder(root.right)

ar = [10,14,17,9,5,15,12,7,8,2,3]
n = len(ar)
root = node(ar[0])
for i in range(1,n-1):
    construct_BST(root,ar[i])
    
inorder(root)
