def dijkstra(graph,list,distance,s):
    distance[s] = 0
    while len(distance)!=0:
        min_val = min(distance.values())
        keys = [i for i in distance if distance[i]==min_val]
        key = keys[0]
        distance.pop(key)
        list[key-1]=min_val
        for  i in range(len(graph[key-1])):
            x = graph[key-1][i][1]
            d = graph[key-1][i][2]
            if x in distance.keys():
                if distance[x]>min_val+d:
                    distance[x]=min_val+d
        
        
def create_graph(graph,source,destination,weight):
    graph[source-1].append((source,destination,weight))   
    
v = 9
graph = [[] for _ in range(v)]
for i in range(v):
    graph[i] = [ ]

create_graph(graph,1,2,4)
create_graph(graph,1,8,8)
create_graph(graph,2,3,8)
create_graph(graph,2,8,11)
create_graph(graph,3,2,8)
create_graph(graph,3,9,2)
create_graph(graph,3,4,7)
create_graph(graph,3,6,4)
create_graph(graph,4,3,7)
create_graph(graph,4,5,9)
create_graph(graph,4,6,14)
create_graph(graph,5,6,10)
create_graph(graph,5,4,9)
create_graph(graph,6,3,4)
create_graph(graph,6,4,14)
create_graph(graph,6,5,10)
create_graph(graph,6,7,2)
create_graph(graph,7,6,2)
create_graph(graph,7,8,1)
create_graph(graph,7,9,6)
create_graph(graph,8,1,8)
create_graph(graph,8,2,11)
create_graph(graph,8,7,1)
create_graph(graph,8,9,7)
create_graph(graph,9,3,2)
create_graph(graph,9,7,6)
create_graph(graph,9,8,7)


list = [0 for _ in range(v)]
distance = {}
for i in range(1,v+1):
    distance[i]=float('inf')

dijkstra(graph,list,distance,3)

print(list)
