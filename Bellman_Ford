def bellman_ford(graph, source,distance):
    distance[source] = 0
    for i in range(v-1):
        for s,d,w in graph[i]:
            if distance[s]!=float('inf') and distance[d]>distance[s]+w:
                distance[d]=distance[s] + w
    return distance

def create_graph(graph,source,destination,weight):
    graph[source-1].append((source,destination,weight))   
    
v = 9
graph = [[] for _ in range(v)]
for i in range(v):
    graph[i] = [ ] 

create_graph(graph, 1, 2, 6)
create_graph(graph, 1, 3, 5)
create_graph(graph, 1, 4, 5)
create_graph(graph, 2, 5, -1)
create_graph(graph, 3, 4, -2)
create_graph(graph, 3, 5, 1)
create_graph(graph, 4, 3, -2)
create_graph(graph, 4, 6, -1)
create_graph(graph, 5, 7, 3)
create_graph(graph, 6, 7, 3)

distance = [float('inf')] * len(graph)
disances = bellman_ford(graph,1,distance)
print(distances)
